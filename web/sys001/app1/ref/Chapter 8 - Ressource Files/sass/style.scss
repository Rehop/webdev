// *********************************START************************************
// Lesson 1 - 3
/* 
Sass Setup using NPM through node-sass
*/
// *********************************END************************************

// *********************************START************************************
// Lesson 4
/* 
Sass Setup Using VS Code Extension => Live Sass Compiler
*/
// *********************************END************************************

// *********************************START************************************
// Lesson 5
/* 
Difference Between .sass and .scss files

**************************.sass
// Indented Syntax
h1 
  color: red
  font-size: 20px
  
h2 
  color: blue
  line-height: 30px

// Compiled code
h1 {
  color: red;
  font-size: 20px;
}

h2 {
  color: blue;
  line-height: 30px;
}

**************************.scss
compiled code = original code
h1 {
  color: red;
}

h2 {
  color: blue;
  line-height: 30px;
}
*/
// *********************************END***********************************

// *********************************START************************************
// Lesson 6
/* 
Sass Variables
*/

// CSS custom properties/variables browser compatibility is around 94%
// https://caniuse.com/#search=css%20custom%20properties

// CSS Variables
// :root {
//   --color-primary: yellowgreen;
// }

// html {
//   --color-primary: yellowgreen;
// }

// body {
//   background-color: var(--color-primary);
// }

// Sass Variables
// $color-primary: yellowgreen;

// body {
//   background-color: $color-primary;
// }

// *********************************END************************************

// *********************************START************************************
// Lesson 7
/* 
Sass Maps => object => key-value pairs
*/
$colors: (
  "color-primary": #303960,
  "color-secondary": #ea9a96,
  "color-tertiary": #f8b24f,
  "color-white": #fff,
);

// section {
//   background-color: map-get($colors, color-primary);
// }

// h2 {
//   color: map-get($colors, color-secondary);
// }

// p {
//   color: map-get($colors, color-white);
// }

// *********************************END************************************

// *********************************START************************************
// Lesson 8
/* 
Sass Nesting
*/

// Element Nesting
// section {
//   background-color: map-get($colors, color-primary);

//   h2 {
//     color: map-get($colors, color-secondary);
//   }

//   p {
//     color: map-get($colors, color-white);
//   }
// }

// Classes Nesting
// .section {
//   background-color: map-get($colors, color-primary);
//   padding: 40px;

//   .section__content {
//     background-color: map-get($colors, color-secondary);

//     .section__content--title {
//       font-size: 40px;
//       padding: 20px 0;
//     }

//     .section__content--para {
//       font-size: 25px;
//       padding: 20px 0;
//     }
//   }
// }

// Using Classes + &
// .section {
//   background-color: map-get($colors, color-primary);
//   padding: 40px;

//   &__content {
//     background-color: map-get($colors, color-secondary);

//     // Interpolation
//     #{&}--title {
//       font-size: 40px;
//       padding: 20px 0;
//     }

//     &--para {
//       font-size: 25px;
//       padding: 20px 0;
//     }
//   }

//   // does not work
//   // &--para {
//   //   font-size: 25px;
//   //   padding: 20px 0;
//   // }
// }

// *********************************END************************************

// *********************************START************************************
// Lesson 9
/* 
Partials and Imports (at import rule => @import)
*/
@import "reset";
// *********************************END************************************
@import "lesson-10-functions";
@import "lesson-11-mixins";
@import "lesson-13-extend";
@import "lesson-14-each";
@import "lesson-15-conditionals";
@import "lesson-16-for-loops";
@import "lesson-17-while-loops";
@import "lesson-18-arithmatic-operators";
